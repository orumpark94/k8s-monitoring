- name: Deploy Prometheus and Grafana on Worker1
  hosts: master
  become: yes
  tasks:
    # 1️⃣ Helm Chart 추가 및 업데이트
    - name: Add Prometheus Helm repository
      command: /usr/local/bin/helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      changed_when: false

    - name: Update Helm repositories
      command: /usr/local/bin/helm repo update
      changed_when: false

    # 2️⃣ StorageClass 존재 여부 확인 후 생성 (삭제 없음)
    - name: Check if StorageClass exists
      shell: kubectl get storageclass local-storage --no-headers --ignore-not-found
      register: storageclass_check
      changed_when: false

    - name: Create StorageClass if not exists
      copy:
        dest: /tmp/storageclass.yaml
        content: |
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: local-storage
          provisioner: kubernetes.io/no-provisioner
          volumeBindingMode: Immediate
      when: storageclass_check.stdout == ""
      changed_when: false

    - name: Apply StorageClass (Only if not exists)
      command: kubectl apply -f /tmp/storageclass.yaml
      when: storageclass_check.stdout == ""
      changed_when: false

    # 3️⃣ PersistentVolume (PV) 자동 생성 (노드 지정)
    - name: Check if PV exists
      shell: kubectl get pv | grep prometheus-pv || true
      register: pv_check
      changed_when: false

    - name: Create PersistentVolume for Prometheus
      copy:
        dest: /tmp/prometheus-pv.yaml
        content: |
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: prometheus-pv
          spec:
            capacity:
              storage: 10Gi
            accessModes:
              - ReadWriteOnce
            persistentVolumeReclaimPolicy: Retain
            storageClassName: local-storage
            local:
              path: /mnt/data/prometheus
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - worker1  # Prometheus를 배포할 노드 지정
      when: pv_check.stdout == ""
      changed_when: false

    - name: Apply PersistentVolume (Only if not exists)
      command: kubectl apply -f /tmp/prometheus-pv.yaml
      when: pv_check.stdout == ""
      changed_when: false

    # 4️⃣ PVC 상태 확인 (삭제 없이 유지)
    - name: Check if Prometheus PVC exists
      shell: kubectl get pvc -n monitoring | grep prometheus-prometheus-kube-prometheus-prometheus-db || true
      register: pvc_check
      changed_when: false

    - name: Wait for existing PVC to be Bound (if exists)
      shell: |
        until kubectl get pvc -n monitoring | grep prometheus-prometheus-kube-prometheus-prometheus-db | grep Bound; do
          echo "Waiting for existing PVC to be bound..."
          sleep 5
        done
      when: pvc_check.stdout != ""
      changed_when: false

    # 5️⃣ Prometheus & Grafana 배포 (기존 PVC 유지)
    - name: Deploy or Update Prometheus & Grafana using Helm
      command: >
        /usr/local/bin/helm upgrade --install prometheus prometheus-community/kube-prometheus-stack
        --namespace monitoring --create-namespace
        --set prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName="local-storage"
        --set prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage="10Gi"
        --set prometheus.service.nodePort=30090 --set prometheus.service.type=NodePort
        --set grafana.service.nodePort=30030 --set grafana.service.type=NodePort
        --set alertmanager.service.nodePort=30903 --set alertmanager.service.type=NodePort
        --wait --timeout 600s
      changed_when: true
