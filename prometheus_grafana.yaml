- name: Deploy Prometheus and Grafana on Worker1
  hosts: master
  become: yes
  tasks:
    - name: Add Prometheus Helm repository
      command: /usr/local/bin/helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      changed_when: false

    - name: Update Helm repositories
      command: /usr/local/bin/helm repo update
      changed_when: false

    - name: Ensure monitoring namespace exists
      shell: |
        kubectl get namespace monitoring || kubectl create namespace monitoring
      changed_when: false
      args:
        executable: /bin/bash

    - name: Get current Alertmanager Service ClusterIP
      shell: |
        kubectl get svc -n monitoring prometheus-kube-prometheus-alertmanager -o jsonpath='{.spec.clusterIP}' 2>/dev/null || echo "NOT_FOUND"
      register: alertmanager_ip_before
      changed_when: false

    - name: Create custom values.yaml for Prometheus & Alertmanager
      copy:
        dest: /tmp/prometheus_values.yaml
        content: |
          nodeSelector:
            kubernetes.io/hostname: "worker1"

          alertmanager:
            enabled: true
            nodeSelector:
              kubernetes.io/hostname: "worker1"
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                      - worker1
            service:
              type: ClusterIP
              port: 9093

          grafana:
            enabled: true
            nodeSelector:
              kubernetes.io/hostname: "worker1"

          prometheus:
            enabled: true
            nodeSelector:
              kubernetes.io/hostname: "worker1"
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                      - worker1
            prometheusSpec:
              alertingEndpoints:
                - static_configs:
                  - targets:
                    - "{{ alertmanager_ip_before.stdout }}"   # Alertmanager ClusterIP 자동 참조
                  scheme: "http"

          prometheusOperator:
            enabled: true
            nodeSelector:
              kubernetes.io/hostname: "master"  # Prometheus Operator는 마스터에서 실행

          kubeStateMetrics:
            enabled: true
            nodeSelector:
              kubernetes.io/hostname: "worker1"

          nodeExporter:
            enabled: true
            nodeSelector:
              kubernetes.io/hostname: "worker1"

    - name: Deploy or Update Prometheus & Grafana using Helm
      command: >
        /usr/local/bin/helm upgrade --install prometheus prometheus-community/kube-prometheus-stack
        --namespace monitoring
        --values /tmp/prometheus_values.yaml --force --wait
      changed_when: true

    - name: Get updated Alertmanager Service ClusterIP
      shell: |
        kubectl get svc -n monitoring prometheus-kube-prometheus-alertmanager -o jsonpath='{.spec.clusterIP}'
      register: alertmanager_ip_after
      changed_when: false

    - name: Restart Prometheus Pods to Apply New Config
      command: kubectl rollout restart statefulset -n monitoring prometheus-prometheus-kube-prometheus-prometheus
      ignore_errors: yes
      changed_when: true

    - name: Verify Prometheus Alertmanager Configuration
      shell: |
        kubectl get prometheus -n monitoring prometheus-kube-prometheus-prometheus -o json | jq '.spec.alerting.alertmanagers'
      register: prometheus_alert_config
      changed_when: false

    - name: Display Alertmanager IP before and after deployment
      debug:
        msg: "Alertmanager IP Before: {{ alertmanager_ip_before.stdout }}, After: {{ alertmanager_ip_after.stdout }}. Prometheus Config: {{ prometheus_alert_config.stdout }}"
