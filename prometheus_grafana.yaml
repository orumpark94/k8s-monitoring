- name: Deploy Prometheus and Grafana on Worker1
  hosts: master
  become: yes
  tasks:
    - name: Add Prometheus Helm repository
      command: /usr/local/bin/helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      changed_when: false

    - name: Update Helm repositories
      command: /usr/local/bin/helm repo update
      changed_when: false

    - name: Ensure monitoring namespace exists
      shell: |
        kubectl get namespace monitoring || kubectl create namespace monitoring
      changed_when: false
      args:
        executable: /bin/bash

    - name: Create StorageClass for local storage
      copy:
        dest: /tmp/storageclass.yaml
        content: |
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: local-storage
          provisioner: kubernetes.io/no-provisioner
          volumeBindingMode: Immediate
      changed_when: false

    - name: Apply StorageClass
      command: kubectl apply -f /tmp/storageclass.yaml
      changed_when: false

    - name: Wait for StorageClass to be available
      shell: |
        until kubectl get storageclass local-storage; do
          echo "Waiting for StorageClass to be available..."
          sleep 5
        done
      changed_when: false

    - name: Deploy or Update Prometheus & Grafana using Helm
      command: >
        /usr/local/bin/helm upgrade --install prometheus prometheus-community/kube-prometheus-stack
        --namespace monitoring --create-namespace
        --set prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName="local-storage"
        --timeout 300s
      changed_when: true

    - name: Wait for Alertmanager Service to be created
      shell: |
        until kubectl get svc -n monitoring prometheus-kube-prometheus-alertmanager -o jsonpath='{.spec.clusterIP}'; do
          echo "Waiting for Alertmanager Service..."
          sleep 5
        done
      register: alertmanager_ip_after
      changed_when: false

    - name: Check Prometheus & Grafana Pod status
      shell: kubectl get pods -n monitoring
      register: pod_status
      changed_when: false

    - name: Display pod status
      debug:
        msg: "{{ pod_status.stdout_lines }}"

    - name: Check Helm release status
      shell: /usr/local/bin/helm list -n monitoring
      register: helm_status
      changed_when: false

    - name: Display Helm status
      debug:
        msg: "{{ helm_status.stdout_lines }}"

